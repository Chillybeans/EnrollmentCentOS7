---
## This playbook installs and configures AD authentication

- name: Install and configure AD authentication
  hosts: all
  remote_user: root

  tasks:
    - name: install pexpect using pip
      shell: /bin/bash -c "mkdir /mnt/tmp"
      ignore_errors: yes

    - name: mount groups share
      shell: /bin/bash -c "mount -t cifs //g-star.raw/data/install -o username=_svc_compadd,domain=G-STAR.RAW,password=R@wadd00 /mnt/tmp"
     
    - name:  copy VMWARE Tools Installation
      shell: /bin/bash -c "cd /mnt/tmp/Server/Linux"
      
    - name: create /tmp 
      shell: /bin/bash -c "mkdir /tmp"
      ignore_errors: yes
      
    - name: copy VMWare Tools Installation
      shell: /bin/bash -c "cp /mnt/tmp/Server/Linux/VMwareTools-9.0.15-2323214.tar.gz /tmp"
      ignore_errors: yes
      
    - name: untar and run
      shell: /bin/bash -c "tar -zxvf /tmp/VMwareTools-9.0.15-2323214.tar.gz -C /tmp/"
      ignore_errors: yes
      
    - name: install some extra modules needed for vmtools
      shell: /bin/bash -c "yum -y -q install perl gcc make kernel-headers kernel-devel -y"
      
    - name: more models
      shell: /bin/bash -c "yum -y -q install 'kernel-devel-uname-r == $(uname -r)'"
      
    - name: run the vmware installer
      shell: /bin/bash -c "/tmp/vmware-tools-distrib/vmware-install.pl -d default"
      
    - name: Install packages needed to join domain
      shell: /bin/bash -c "yum -y -q install realmd sssd oddjob oddjob-mkhomedir adcli samba-common"
      
    - name: Download Python Pip install script
      shell: curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py"
      
    - name: Run Install script Python Pip
      shell: python get-pip.py
      
    - name: Install Pexpect using Pip
      shell: /bin/bash -c "pip install pexpect"
      
    - name: Join system to Domain
      expect:
        command: /bin/bash -c "/usr/sbin/realm join G-STAR.RAW --user=_svc_compadd"
        responses: 
          Password for _svc_compadd: "R@wadd00"
          
    - name: Deny all logins
      shell: /bin/bash -c "realm deny --all"
      
    - name: allow ADM group for this server
      shell: realm permit -g G-STAR.RAW\\ADM-OMS-$HOSTNAME
      
    - name: add group to sudoers
      shell: echo '%ADM-OMS-$HOSTNAME ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
      
    - name: Don't use FQDN for logins
      shell: sed -i 's/use_fully_qualified_names = True/use_fully_qualified_names = False/g' /etc/sssd/sssd.conf
      
    - name: restart sssd to process changes
      shell: service sssd restart
      
